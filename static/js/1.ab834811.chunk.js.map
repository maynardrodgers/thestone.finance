{"version":3,"sources":["components/Card/Card.tsx","assets/img/twitter.svg","assets/img/github.svg","assets/img/telegram.svg","assets/img/discord.svg","assets/img/youtube.svg","assets/img/cryto_stone.png","assets/img/wallet-connect.svg","assets/img/coinbase_logo.jpeg","assets/img/stone_c.png","assets/img/sshares_c.png","assets/img/crypto_tomb_cash.png","assets/img/crypto_tomb_share.png","assets/img/sbonds_c.png","assets/img/tomb_ftm_lp.png","assets/img/tshare_ftm_lp.png","assets/img/ftm_logo_blue.svg","assets/img/spooky.png","assets/img/DAI.png","assets/img/USDC.png","hooks/useRefresh.ts","state/transactions/hooks.tsx","components/Input/Input.tsx","components/TokenInput/TokenInput.tsx","components/TokenSymbol/TokenSymbol.tsx","components/Label/Label.tsx","hooks/useTokenBalance.ts","hooks/useAllowance.ts","components/Container/Container.tsx","components/Modal/Modal.tsx","components/ModalTitle/ModalTitle.tsx","hooks/useEagerConnect.js","components/Footer/Footer.js","components/Footer/index.js","components/ListItemLink/index.js","components/ListItemLink/ListItemLink.js","components/Nav/Nav.tsx","components/Nav/index.ts","components/Page/Page.tsx","hooks/useModal.ts","components/WalletProviderModal/WalletCard.js","components/WalletProviderModal/WalletProviderModal.js","components/WalletProviderModal/index.js","components/Nav/AccountModal.tsx","components/Nav/AccountButton.tsx","components/CardContent/CardContent.tsx","assets/img/metamask-fox.svg"],"names":["StyledCard","styled","div","props","theme","color","grey","Card","children","module","exports","useRefresh","useContext","RefreshContext","fastRefresh","fast","slowRefresh","slow","useTransactionAdder","useWallet","chainId","account","dispatch","useDispatch","useCallback","response","summary","approval","hash","Error","addTransaction","from","useAllTransactions","state","useSelector","transactions","useHasPendingApproval","tokenAddress","spender","allTransactions","useMemo","Object","keys","some","tx","receipt","Date","getTime","addedTime","isTransactionRecent","StyledInputWrapper","borderRadius","spacing","StyledInput","input","Input","endAdornment","onChange","placeholder","startAdornment","value","StyledTokenInput","StyledSpacer","StyledTokenAdornmentWrapper","StyledMaxText","TokenInput","max","symbol","onSelectMax","toLocaleString","Button","size","variant","onClick","logosBySymbol","STONE","tombLogo","TOMBPNG","tombLogoPNG","TSHAREPNG","tShareLogoPNG","SSHARE","tShareLogo","SBOND","tBondLogo","WFTM","wftmLogo","BOO","booLogo","USDC","usdcLogo","DAI","daiLogo","tombFtmLpLogo","tshareFtmLpLogo","TokenSymbol","src","alt","width","height","StyledLabel","Label","labelColor","text","customColor","ThemeContext","primary","main","useTokenBalance","token","useState","BigNumber","balance","setBalance","tombFinance","useTombFinance","isUnlocked","fetchBalance","a","balanceOf","myAccount","useEffect","catch","err","console","error","stack","refreshInterval","setInterval","config","clearInterval","useAllowance","pendingApproval","allowance","setAllowance","fetchAllowance","StyledContainer","Container","siteWidth","StyledModal","Modal","CardContent","StyledModalTitle","topBarSize","ModalTitle","useEagerConnect","connect","connector","window","localStorage","getItem","setItem","connectorId","useStyles","makeStyles","footer","position","bottom","paddingTop","paddingBottom","backgroundColor","textAlign","breakpoints","down","display","link","marginLeft","img","Footer","classes","className","maxWidth","Grid","container","item","xs","Typography","align","Link","href","getFullYear","style","rel","target","TwitterImage","TelegramImage","DiscordImage","ListItemLink","to","CustomLink","React","forwardRef","linkProps","ref","ListItem","button","component","ListItemText","ul","margin","padding","listStyle","appBar","marginBottom","drawer","flexShrink","drawerPaper","hide","toolbar","flexWrap","toolbarTitle","fontFamily","fontSize","flexGrow","textTransform","textDecoration","brandLink","Nav","matches","useMediaQuery","useTheme","open","setOpen","handleDrawerClose","AppBar","elevation","Toolbar","noWrap","alignItems","CashImage","Box","mr","AccountButton","IconButton","aria-label","edge","clsx","Drawer","onEscapeKeyDown","onBackdropClick","anchor","paper","direction","Divider","List","justifyContent","Page","minHeight","useModal","modal","Context","onDismiss","onPresent","WalletCard","icon","onConnect","title","fullWidth","marginRight","palette","background","boxShadow","shadows","outline","WalletProviderModal","handleClose","aria-labelledby","aria-describedby","onClose","metamaskLogo","walletConnectLogo","coingBaseLogo","StyledValue","StyledBalance","Balances","StyledBalanceWrapper","AccountModal","tombBalance","displayTombBalance","getDisplayBalance","tshareBalance","displayTshareBalance","tbondBalance","displayTbondBalance","CustomBtn","accountEllipsis","substring","length","onPresentAccountModal","isWalletProviderOpen","setWalletProviderOpen","buttonText","StyledCardContent"],"mappings":"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","file":"static/js/1.ab834811.chunk.js","sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nconst Card: React.FC = ({ children }) => <StyledCard>{children}</StyledCard>;\n\nconst StyledCard = styled.div`\n  background-color: #1f1f2b; //${(props) => props.theme.color.grey[800]};\n  color: #9090ff !important;\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n`;\n\nexport default Card;\n","module.exports = __webpack_public_path__ + \"static/media/twitter.08d2ade8.svg\";","module.exports = __webpack_public_path__ + \"static/media/github.1f24f07c.svg\";","module.exports = __webpack_public_path__ + \"static/media/telegram.28146bd8.svg\";","module.exports = __webpack_public_path__ + \"static/media/discord.5f33a495.svg\";","module.exports = __webpack_public_path__ + \"static/media/youtube.503d2e22.svg\";","module.exports = __webpack_public_path__ + \"static/media/cryto_stone.83712cd9.png\";","module.exports = __webpack_public_path__ + \"static/media/wallet-connect.37f2bc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/coinbase_logo.3765bf16.jpeg\";","module.exports = __webpack_public_path__ + \"static/media/stone_c.b61ba6c2.png\";","module.exports = __webpack_public_path__ + \"static/media/sshares_c.9b9fab6c.png\";","module.exports = __webpack_public_path__ + \"static/media/crypto_tomb_cash.fbd96145.png\";","module.exports = __webpack_public_path__ + \"static/media/crypto_tomb_share.0f0467bf.png\";","module.exports = __webpack_public_path__ + \"static/media/sbonds_c.93cbafc5.png\";","module.exports = __webpack_public_path__ + \"static/media/tomb_ftm_lp.9968c327.png\";","module.exports = __webpack_public_path__ + \"static/media/tshare_ftm_lp.2cdbbc14.png\";","module.exports = __webpack_public_path__ + \"static/media/ftm_logo_blue.3af63018.svg\";","module.exports = __webpack_public_path__ + \"static/media/spooky.1b007b4a.png\";","module.exports = __webpack_public_path__ + \"static/media/DAI.26d4501f.png\";","module.exports = __webpack_public_path__ + \"static/media/USDC.c76b33ca.png\";","import { useContext } from 'react'\nimport { RefreshContext } from './../contexts/RefreshContext'\n\n\nconst useRefresh = () => {\n  const { fast, slow } = useContext(RefreshContext)\n  return { fastRefresh: fast, slowRefresh: slow }\n}\n\nexport default useRefresh","import { TransactionResponse } from '@ethersproject/providers';\nimport { useCallback, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useWallet } from 'use-wallet';\n\nimport { AppDispatch, AppState } from '../index';\nimport { addTransaction, clearAllTransactions } from './actions';\nimport { TransactionDetails } from './reducer';\n\n// helper that can take a ethers library transaction response and add it to the list of transactions\nexport function useTransactionAdder(): (\n  response: TransactionResponse,\n  customData?: { summary?: string; approval?: { tokenAddress: string; spender: string } },\n) => void {\n  const { chainId, account } = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n\n  return useCallback(\n    (\n      response: TransactionResponse,\n      { summary, approval }: { summary?: string; approval?: { tokenAddress: string; spender: string } } = {},\n    ) => {\n      if (!account) return;\n      if (!chainId) return;\n\n      const { hash } = response;\n      if (!hash) {\n        throw Error('No transaction hash found.');\n      }\n      dispatch(addTransaction({ hash, from: account, chainId, approval, summary }));\n    },\n    [dispatch, chainId, account],\n  );\n}\n\n// returns all the transactions for the current chain\nexport function useAllTransactions(): { [txHash: string]: TransactionDetails } {\n  const { chainId } = useWallet();\n  const state = useSelector<AppState, AppState['transactions']>((state) => state.transactions);\n\n  return chainId ? state[chainId] ?? {} : {};\n}\n\nexport function useIsTransactionPending(transactionHash?: string): boolean {\n  const transactions = useAllTransactions();\n  if (!transactionHash || !transactions[transactionHash]) {\n    return false;\n  }\n  return !transactions[transactionHash].receipt;\n}\n\n/**\n * Returns whether a transaction happened in the last day (86400 seconds * 1000 milliseconds / second)\n * @param tx to check for recency\n */\nexport function isTransactionRecent(tx: TransactionDetails): boolean {\n  return new Date().getTime() - tx.addedTime < 86_400_000;\n}\n\n// returns whether a token has a pending approval transaction\nexport function useHasPendingApproval(tokenAddress: string | undefined, spender: string | undefined): boolean {\n  const allTransactions = useAllTransactions();\n  return useMemo(\n    () =>\n      typeof tokenAddress === 'string' &&\n      typeof spender === 'string' &&\n      Object.keys(allTransactions).some((hash) => {\n        const tx = allTransactions[hash];\n        if (!tx) return false;\n        if (tx.receipt) {\n          return false;\n        } else {\n          const approval = tx.approval;\n          if (!approval) return false;\n          return approval.spender === spender && approval.tokenAddress === tokenAddress && isTransactionRecent(tx);\n        }\n      }),\n    [allTransactions, spender, tokenAddress],\n  );\n}\n\nexport function useClearAllTransactions(): { clearAllTransactions: () => void } {\n  const { chainId } = useWallet();\n  const dispatch = useDispatch<AppDispatch>();\n  return {\n    clearAllTransactions: useCallback(() => dispatch(clearAllTransactions({ chainId })), [dispatch, chainId]),\n  };\n}\n","import React from 'react';\nimport styled from 'styled-components';\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode;\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void;\n  placeholder?: string;\n  startAdornment?: React.ReactNode;\n  value: string;\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <StyledInputWrapper>\n      {!!startAdornment && startAdornment}\n      <StyledInput placeholder={placeholder} value={value} onChange={onChange} />\n      {!!endAdornment && endAdornment}\n    </StyledInputWrapper>\n  );\n};\n\nconst StyledInputWrapper = styled.div`\n  align-items: center;\n  background-color: ${(props) => props.theme.color.grey[200]};\n  border-radius: ${(props) => props.theme.borderRadius}px;\n  display: flex;\n  padding: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledInput = styled.input`\n  background: none;\n  border: 0;\n  color: ${(props) => props.theme.color.grey[600]};\n  font-size: 18px;\n  flex: 1;\n  height: 56px;\n  margin: 0;\n  padding: 0;\n  outline: none;\n`;\n\nexport default Input;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport { Button } from '@material-ui/core';\nimport Input, { InputProps } from '../Input';\n\ninterface TokenInputProps extends InputProps {\n  max: number | string;\n  symbol: string;\n  onSelectMax?: () => void;\n}\n\nconst TokenInput: React.FC<TokenInputProps> = ({ max, symbol, onChange, onSelectMax, value }) => {\n  return (\n    <StyledTokenInput>\n      <StyledMaxText>\n        {max.toLocaleString()} {symbol} Available\n      </StyledMaxText>\n      <Input\n        endAdornment={\n          <StyledTokenAdornmentWrapper>\n            {/* <StyledTokenSymbol>{symbol}</StyledTokenSymbol> */}\n            <StyledSpacer />\n            <div>\n              <Button size=\"small\" color=\"primary\" variant=\"contained\" onClick={onSelectMax}>\n                Max\n              </Button>\n            </div>\n          </StyledTokenAdornmentWrapper>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </StyledTokenInput>\n  );\n};\n\n/*\n            <div>\n              <Button size=\"sm\" text=\"Max\" />\n            </div>\n*/\n\nconst StyledTokenInput = styled.div``;\n\nconst StyledSpacer = styled.div`\n  width: ${(props) => props.theme.spacing[3]}px;\n`;\n\nconst StyledTokenAdornmentWrapper = styled.div`\n  align-items: center;\n  display: flex;\n`;\n\nconst StyledMaxText = styled.div`\n  align-items: center;\n  color: ${(props) => props.theme.color.grey[700]};\n  display: flex;\n  font-size: 14px;\n  font-weight: 700;\n  height: 44px;\n  justify-content: flex-end;\n`;\n\nexport default TokenInput;\n","import React from 'react';\n\n//Graveyard ecosystem logos\nimport tombLogo from '../../assets/img/stone_c.png';\nimport tShareLogo from '../../assets/img/sshares_c.png';\nimport tombLogoPNG from '../../assets/img/crypto_tomb_cash.png';\nimport tShareLogoPNG from '../../assets/img/crypto_tomb_share.png';\nimport tBondLogo from '../../assets/img/sbonds_c.png';\n\nimport tombFtmLpLogo from '../../assets/img/tomb_ftm_lp.png';\nimport tshareFtmLpLogo from '../../assets/img/tshare_ftm_lp.png';\n\nimport wftmLogo from '../../assets/img/ftm_logo_blue.svg';\nimport booLogo from '../../assets/img/spooky.png';\nimport daiLogo from '../../assets/img/DAI.png';\nimport usdcLogo from '../../assets/img/USDC.png';\n\nconst logosBySymbol: { [title: string]: string } = {\n  //Real tokens\n  //=====================\n  STONE: tombLogo,\n  TOMBPNG: tombLogoPNG,\n  TSHAREPNG: tShareLogoPNG,\n  SSHARE: tShareLogo,\n  SBOND: tBondLogo,\n  WFTM: wftmLogo,\n  BOO: booLogo,\n  USDC: usdcLogo,\n  DAI: daiLogo,\n  'STONE-FTM-LP': tombFtmLpLogo,\n  'SSHARE-FTM-LP': tshareFtmLpLogo,\n};\n\ntype LogoProps = {\n  symbol: string;\n  size?: number;\n};\n\nconst TokenSymbol: React.FC<LogoProps> = ({ symbol, size = 64 }) => {\n  if (!logosBySymbol[symbol]) {\n    // throw new Error(`Invalid Token Logo symbol: ${symbol}`);\n  }\n   return <img src={logosBySymbol[symbol]} alt={`${symbol} Logo`} width={size} height={size} />;\n};\n\nexport default TokenSymbol;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface LabelProps {\n  text?: string;\n  variant?: 'primary' | 'secondary' | 'normal';\n  color?: string;\n}\n\nconst Label: React.FC<LabelProps> = ({ text, variant = 'secondary', color: customColor }) => {\n  const { color } = useContext(ThemeContext);\n\n  let labelColor: string;\n  if (customColor) {\n    labelColor = customColor;\n  } else {\n    if (variant === 'primary') {\n      labelColor = color.primary.main;\n    } else if (variant === 'secondary') {\n      labelColor = '#9090ff'; //color.secondary.main;\n    } else if (variant === 'normal') {\n      labelColor = '#9090ff'; //color.grey[300];\n    }\n  }\n  return <StyledLabel color={labelColor}>{text}</StyledLabel>;\n};\n\ninterface StyledLabelProps {\n  color: string;\n}\n\nconst StyledLabel = styled.div<StyledLabelProps>`\n  color: ${(props) => props.color};\n`;\n\nexport default Label;\n","import { useCallback, useEffect, useState } from 'react';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../tomb-finance/ERC20';\nimport useTombFinance from './useTombFinance';\nimport config from '../config';\n\nconst useTokenBalance = (token: ERC20) => {\n  const [balance, setBalance] = useState(BigNumber.from(0));\n  const tombFinance = useTombFinance();\n  const isUnlocked = tombFinance?.isUnlocked;\n\n  const fetchBalance = useCallback(async () => {\n    setBalance(await token.balanceOf(tombFinance.myAccount));\n  }, [token, tombFinance.myAccount]);\n\n  useEffect(() => {\n    if (isUnlocked) {\n      fetchBalance().catch((err) => console.error(`Failed to fetch token balance: ${err.stack}`));\n      let refreshInterval = setInterval(fetchBalance, config.refreshInterval);\n      return () => clearInterval(refreshInterval);\n    }\n  }, [isUnlocked, token, fetchBalance, tombFinance]);\n\n  return balance;\n};\n\nexport default useTokenBalance;\n","import { useCallback, useEffect, useState } from 'react';\nimport { useWallet } from 'use-wallet';\nimport { BigNumber } from 'ethers';\nimport ERC20 from '../tomb-finance/ERC20';\n\nconst useAllowance = (token: ERC20, spender: string, pendingApproval?: boolean) => {\n  const [allowance, setAllowance] = useState<BigNumber>(null);\n  const { account } = useWallet();\n\n  const fetchAllowance = useCallback(async () => {\n    const allowance = await token.allowance(account, spender);\n    setAllowance(allowance);\n  }, [account, spender, token]);\n\n  useEffect(() => {\n    if (account && spender && token) {\n      fetchAllowance().catch((err) => console.error(`Failed to fetch allowance: ${err.stack}`));\n    }\n  }, [account, spender, token, pendingApproval, fetchAllowance]);\n\n  return allowance;\n};\n\nexport default useAllowance;\n","import React, { useContext } from 'react';\nimport styled, { ThemeContext } from 'styled-components';\n\ninterface ContainerProps {\n  children?: React.ReactNode;\n  size?: 'sm' | 'md' | 'lg';\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, size = 'md' }) => {\n  const { siteWidth } = useContext<{ siteWidth: number }>(ThemeContext);\n  let width: number;\n  switch (size) {\n    case 'sm':\n      width = siteWidth / 2;\n      break;\n    case 'md':\n      width = (siteWidth * 2) / 3;\n      break;\n    case 'lg':\n    default:\n      width = siteWidth;\n  }\n  return <StyledContainer width={width}>{children}</StyledContainer>;\n};\n\ninterface StyledContainerProps {\n  width: number;\n}\n\nconst StyledContainer = styled.div<StyledContainerProps>`\n  box-sizing: border-box;\n  margin: 0 auto;\n  max-width: ${(props) => props.width}px;\n  padding: 0 ${(props) => props.theme.spacing[4]}px;\n  width: 100%;\n`;\n\nexport default Container;\n","import React from 'react';\nimport styled from 'styled-components';\n\nimport Card from '../Card';\nimport CardContent from '../CardContent';\nimport Container from '../Container';\n\nexport interface ModalProps {\n  onDismiss?: () => void;\n}\n\nconst Modal: React.FC = ({ children }) => {\n  return (\n    <Container size=\"sm\">\n      <StyledModal>\n        <Card>\n          <CardContent>{children}</CardContent>\n        </Card>\n      </StyledModal>\n    </Container>\n  );\n};\n\nconst StyledModal = styled.div`\n  border-radius: 12px;\n  position: relative;\n`;\n\nexport default Modal;\n","import React from 'react';\nimport styled from 'styled-components';\n\ninterface ModalTitleProps {\n  text?: string;\n}\n\nconst ModalTitle: React.FC<ModalTitleProps> = ({ text }) => <StyledModalTitle>{text}</StyledModalTitle>;\n\nconst StyledModalTitle = styled.div`\n  align-items: center;\n  // color: ${(props) => props.theme.color.grey[300]};\n  color: #d5d8e5;\n  display: flex;\n  font-size: 18px;\n  font-weight: 700;\n  height: ${(props) => props.theme.topBarSize}px;\n  justify-content: center;\n  margin-top: ${(props) => -props.theme.spacing[4]}px;\n`;\n\nexport default ModalTitle;\n","import { useEffect } from 'react';\n// import { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\nimport { useWallet } from 'use-wallet';\n\nconst useEagerConnect = () => {\n  // const { login } = useAuth()\n  const { account, connect, connector } = useWallet();\n\n  if (account && window.localStorage.getItem('connectorId') === '') {\n    window.localStorage.setItem('connectorId', connector);\n  }\n\n  useEffect(() => {\n    const connectorId = window.localStorage.getItem('connectorId');\n    if (connectorId && !account) {\n      connect(connectorId);\n    }\n  }, [connect, account]);\n};\n\nexport default useEagerConnect;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Container, Grid, Typography, Link } from '@material-ui/core';\nimport TwitterImage from '../../assets/img/twitter.svg';\nimport GithubImage from '../../assets/img/github.svg';\nimport TelegramImage from '../../assets/img/telegram.svg';\nimport DiscordImage from '../../assets/img/discord.svg';\nimport YoutubeImage from '../../assets/img/youtube.svg';\n\nconst useStyles = makeStyles((theme) => ({\n  footer: {\n    position: 'absolute',\n    bottom: '0',\n    paddingTop: '15px',\n    paddingBottom: '15px',\n    width: '100%',\n    color: 'white',\n    backgroundColor: '#28283D',\n    textAlign: 'center',\n    height: '1.3rem',\n    [theme.breakpoints.down('xs')]: {\n      display: 'none',\n    },\n  },\n  link: {\n    width: '24px',\n    height: '24px',\n    display: 'inline',\n    marginLeft: '20px',\n  },\n\n  img: {\n    width: '24px',\n    height: '24px',\n  },\n}));\n\nconst Footer = () => {\n  const classes = useStyles();\n  return (\n    <footer className={classes.footer}>\n      <Container maxWidth=\"lg\">\n        <Grid container>\n          <Grid item xs={6}>\n            <Typography variant=\"body2\" color=\"textSecondary\" align=\"left\">\n              {'Copyright © '}\n              <Link color=\"inherit\" href=\"/\">\n               The Stone Finance\n              </Link>{' '}\n              {new Date().getFullYear()}\n\n            </Typography>\n          </Grid>\n          <Grid item xs={6} style={{ textAlign: 'right' }}>\n            <a\n              href=\"https://twitter.com/StoneFinance9\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className={classes.link}\n            >\n              <img alt=\"twitter\" src={TwitterImage} className={classes.img} />\n            </a>            \n            <a href=\"https://t.me/StoneFinance\" rel=\"noopener noreferrer\" target=\"_blank\" className={classes.link}>\n              <img alt=\"telegram\" src={TelegramImage} className={classes.img} />\n            </a>\n            <a\n              href=\"https://discord.gg/xKE3qtemBY\"\n              rel=\"noopener noreferrer\"\n              target=\"_blank\"\n              className={classes.link}\n            >\n              <img alt=\"discord\" src={DiscordImage} className={classes.img} />\n            </a>\n          </Grid>\n        </Grid>\n      </Container>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Footer from './Footer';\n\nexport default Footer;\n","import ListItemLink from './ListItemLink';\n\nexport default ListItemLink;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { ListItem, ListItemText } from '@material-ui/core';\n\nconst ListItemLink = ({ primary, to }) => {\n  const CustomLink = React.useMemo(\n    () => React.forwardRef((linkProps, ref) => <Link ref={ref} to={to} {...linkProps} />),\n    [to],\n  );\n\n  return (\n    <li>\n      <ListItem button component={CustomLink}>\n        <ListItemText primary={primary} />\n      </ListItem>\n    </li>\n  );\n};\n\nexport default ListItemLink;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Link } from 'react-router-dom';\nimport CashImage from '../../assets/img/cryto_stone.png';\nimport FantomLogo from '../../assets/img/fantom-logo-grey.png';\nimport Image from 'material-ui-image';\nimport {\n  AppBar,\n  Box,\n  Drawer,\n  IconButton,\n  Toolbar,\n  Typography,\n  useMediaQuery,\n  List,\n  ListItem,\n  ListItemText,\n  Divider,\n} from '@material-ui/core';\n\nimport ListItemLink from '../ListItemLink';\n\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport { makeStyles, useTheme } from '@material-ui/core/styles';\nimport AccountButton from './AccountButton';\n\nconst useStyles = makeStyles((theme) => ({\n  '@global': {\n    ul: {\n      margin: 0,\n      padding: 0,\n      listStyle: 'none',\n    },\n  },\n  appBar: {\n    color: '#d5d8e5',\n    'background-color': '#1f1f2b',\n    // borderBottom: `1px solid ${theme.palette.divider}`,\n    padding: '10px',\n    marginBottom: '3rem',\n  },\n  drawer: {\n    width: 240,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: 240,\n  },\n  hide: {\n    display: 'none',\n  },\n  toolbar: {\n    flexWrap: 'wrap',\n  },\n  toolbarTitle: {\n    fontFamily: '\"Poppins\", sans-serif',\n    // fontFamily: '\"Amarante\", cursive',\n    fontSize: '30px',\n    flexGrow: 1,\n  },\n  link: {\n    textTransform: 'capitalize',\n    color: '#d5d8e5',\n    fontSize: '14px',\n    margin: theme.spacing(1, 2),\n    textDecoration: 'none',\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n  brandLink: {\n    textDecoration: 'none',\n    color: '#d5d8e5',\n    '&:hover': {\n      textDecoration: 'none',\n    },\n  },\n}));\n\nconst Nav = () => {\n  const matches = useMediaQuery('(min-width:900px)');\n  const classes = useStyles();\n  const theme = useTheme();\n  const [open, setOpen] = React.useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <AppBar position=\"sticky\" elevation={0} className={classes.appBar}>\n      <Toolbar className={classes.toolbar}>\n        {matches ? (\n          <>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap className={classes.toolbarTitle} style={{display: 'flex', alignItems: 'center'}}>\n              {/* <a className={ classes.brandLink } href=\"/\">STONE Finance</a> */}\n              <Image color=\"none\" style={{ width: '40px',height: '40px', paddingTop: '0px' }} src={CashImage} />\n              <Link to=\"/\" style={{color:'#fff', fontSize: '20px',}} className={classes.brandLink}>\n                THE STONE FINANCE\n              </Link>\n              {/* <Typography style={{ fontSize: '13px', marginRight: '50px', paddingLeft: '50px', alignItems: 'center', justifyContent: 'center' }}>Powered by\n                <Image color=\"none\" style={{ width: '80px',height: '20px', paddingTop: '0px' }} src={FantomLogo} />\n              </Typography> */}\n            </Typography>\n            <Box mr={5}>\n              <Link color=\"textPrimary\" to=\"/\" className={classes.link}>\n                Home\n              </Link>\n              <Link color=\"textPrimary\" to=\"/farm\" className={classes.link}>\n                Farm\n              </Link>\n              <Link color=\"textPrimary\" to=\"/boardroom\" className={classes.link}>\n                Board Room\n              </Link>\n              <Link color=\"textPrimary\" to=\"/bonds\" className={classes.link}>\n                Buy & Redeem Bonds\n              </Link>\n              <Link color=\"textPrimary\" to=\"/#\" className={classes.link}>\n                NFT MarketPlace (Soon)\n              </Link>\n              <Link color=\"textPrimary\" to=\"/#\" className={classes.link}>\n                Vote (Soon)\n              </Link>\n              {/* <Link color=\"textPrimary\" to=\"/regulations\" className={classes.link}>\n                Regulations\n              </Link> */}\n              <a href=\"#\" className={classes.link}>\n                Docs\n              </a>\n            </Box>\n            <AccountButton text=\"Connect Wallet\" />\n          </>\n        ) : (\n          <>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              onClick={handleDrawerOpen}\n              edge=\"start\"\n              className={clsx(open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Image color=\"none\" style={{ width: '40px',height: '40px', paddingTop: '0px' }} src={CashImage} />\n            <Link to=\"/\" style={{color:'#fff', fontSize: '20px',}} className={classes.brandLink}>\n              STONE\n            </Link>\n\n            <Drawer\n              className={classes.drawer}\n              onEscapeKeyDown={handleDrawerClose}\n              onBackdropClick={handleDrawerClose}\n              variant=\"temporary\"\n              anchor=\"left\"\n              open={open}\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n            >\n              <div>\n                <IconButton onClick={handleDrawerClose}>\n                  {theme.direction === 'rtl' ? <ChevronRightIcon /> : <ChevronLeftIcon />}\n                </IconButton>\n              </div>\n              <Divider />\n              <List>\n                <ListItemLink primary=\"Home\" to=\"/\" />\n                <ListItemLink primary=\"Farm\" to=\"/farm\" />\n                <ListItemLink primary=\"Board Room\" to=\"/boardroom\" />\n                <ListItemLink primary=\"Buy & Redeem Bonds\" to=\"/bonds\" />\n                <ListItemLink primary=\"NFT MarketPlace(Soon)\" to=\"/#\" />\n                <ListItemLink primary=\"Vote (Soon)\" to=\"/#\" />\n                {/*<ListItemLink primary=\"SBS\" to=\"/sbs\" />*/}\n                {/*<ListItemLink primary=\"Liquidity\" to=\"/liquidity\" />*/}\n                {/*<ListItemLink primary=\"Regulations\" to=\"/regulations\" />*/}\n                <ListItem button component=\"a\" href=\"#\">\n                  <ListItemText>Docs</ListItemText>\n                </ListItem>\n\n                <ListItem style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}>\n                  <AccountButton text=\"Connect Wallet\" />\n                </ListItem>\n              </List>\n            </Drawer>\n          </>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Nav;\n","import Nav from './Nav';\n\nexport default Nav;\n","import React from 'react';\nimport { Container } from '@material-ui/core';\nimport useEagerConnect from '../../hooks/useEagerConnect';\n\nimport Footer from '../Footer';\nimport Nav from '../Nav';\n\nconst Page: React.FC = ({ children }) => {\n  useEagerConnect();\n  return (\n    <div style={{ position: 'relative', minHeight: '100vh' }}>\n      <Nav />\n      <Container maxWidth=\"lg\" style={{ paddingBottom: '5rem' }}>\n        {children}\n      </Container>\n      <Footer />\n    </div>\n  );\n};\n\nexport default Page;\n","import { useCallback, useContext } from 'react';\n\nimport { Context } from '../contexts/Modals';\n\nconst useModal = (modal: React.ReactNode) => {\n  const { onDismiss, onPresent } = useContext(Context);\n\n  const handlePresent = useCallback(() => {\n    onPresent(modal);\n  }, [modal, onPresent]);\n\n  return [handlePresent, onDismiss];\n};\n\nexport default useModal;\n","import React from 'react';\nimport { Button } from '@material-ui/core';\n\nconst WalletCard = ({ icon, onConnect, title }) => (\n  <Button fullWidth onClick={onConnect} className=\"wallet-button\">\n    <span style={{ marginRight: '1rem', height: '2rem' }}>{icon}</span>\n    <span>{title}</span>\n  </Button>\n);\n\nexport default WalletCard;\n\n// :)\n","import React, { useEffect } from 'react';\nimport WalletCard from './WalletCard';\nimport { Modal, List } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport metamaskLogo from '../../assets/img/metamask-fox.svg';\nimport walletConnectLogo from '../../assets/img/wallet-connect.svg';\nimport coingBaseLogo from '../../assets/img/coinbase_logo.jpeg';\nimport { useWallet } from 'use-wallet';\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: '400px',\n    maxWidth: '100%',\n    backgroundColor: theme.palette.background.paper,\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(4),\n    outline: 'none',\n  },\n}));\n\nconst WalletProviderModal = ({ open, handleClose }) => {\n  const classes = useStyles();\n  const { account, connect } = useWallet();\n\n  useEffect(() => {\n    if (account) {\n      handleClose();\n    }\n  });\n\n  return (\n    <Modal\n      aria-labelledby=\"connect a wallet\"\n      aria-describedby=\"connect your crypto wallet\"\n      open={open}\n      style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\n      onClose={handleClose}\n    >\n      <div className={classes.paper}>\n        <h2>Connect Wallet</h2>\n        <List component=\"nav\" aria-label=\"main mailbox folders\">\n          <WalletCard\n            icon={<img src={metamaskLogo} alt=\"Metamask logo\" style={{ height: 32 }} />}\n            onConnect={() => {\n              connect('injected');\n            }}\n            title=\"Metamask\"\n          />\n          <WalletCard\n            icon={<img src={walletConnectLogo} alt=\"Wallet Connect logo\" style={{ height: 24 }} />}\n            onConnect={() => {\n              connect('walletconnect');\n            }}\n            title=\"WalletConnect\"\n          />\n          <WalletCard\n            icon={<img src={coingBaseLogo} alt=\"Coinbase wallet logo\" style={{ height: 32 }} />}\n            onConnect={() => {\n              connect('walletlink');\n            }}\n            title=\"Coinbase Wallet\"\n          />\n        </List>\n      </div>\n    </Modal>\n  );\n};\n\nexport default WalletProviderModal;\n","import WalletProviderModal from './WalletProviderModal';\n\nexport default WalletProviderModal;\n","import React, { useMemo } from 'react';\nimport styled from 'styled-components';\nimport useTokenBalance from '../../hooks/useTokenBalance';\nimport { getDisplayBalance } from '../../utils/formatBalance';\n\nimport Label from '../Label';\nimport Modal, { ModalProps } from '../Modal';\nimport ModalTitle from '../ModalTitle';\nimport useTombFinance from '../../hooks/useTombFinance';\nimport TokenSymbol from '../TokenSymbol';\n\nconst AccountModal: React.FC<ModalProps> = ({ onDismiss }) => {\n  const tombFinance = useTombFinance();\n\n  const tombBalance = useTokenBalance(tombFinance.STONE);\n  const displayTombBalance = useMemo(() => getDisplayBalance(tombBalance), [tombBalance]);\n\n  const tshareBalance = useTokenBalance(tombFinance.SSHARE);\n  const displayTshareBalance = useMemo(() => getDisplayBalance(tshareBalance), [tshareBalance]);\n\n  const tbondBalance = useTokenBalance(tombFinance.SBOND);\n  const displayTbondBalance = useMemo(() => getDisplayBalance(tbondBalance), [tbondBalance]);\n\n  return (\n    <Modal>\n      <ModalTitle text=\"My Wallet\" />\n\n      <Balances>\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"STONE\" />\n          <StyledBalance>\n            <StyledValue>{displayTombBalance}</StyledValue>\n            <Label text=\"STONE Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"SSHARE\" />\n          <StyledBalance>\n            <StyledValue>{displayTshareBalance}</StyledValue>\n            <Label text=\"SSHARE Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n\n        <StyledBalanceWrapper>\n          <TokenSymbol symbol=\"SBOND\" />\n          <StyledBalance>\n            <StyledValue>{displayTbondBalance}</StyledValue>\n            <Label text=\"SBOND Available\" />\n          </StyledBalance>\n        </StyledBalanceWrapper>\n      </Balances>\n    </Modal>\n  );\n};\n\nconst StyledValue = styled.div`\n  //color: ${(props) => props.theme.color.grey[300]};\n  font-size: 30px;\n  font-weight: 700;\n`;\n\nconst StyledBalance = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Balances = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  margin-bottom: ${(props) => props.theme.spacing[4]}px;\n`;\n\nconst StyledBalanceWrapper = styled.div`\n  align-items: center;\n  display: flex;\n  flex-direction: column;\n  margin: 0 ${(props) => props.theme.spacing[3]}px;\n`;\n\nexport default AccountModal;\n","import React, { useState } from 'react';\nimport { Button } from '@material-ui/core';\nimport { useWallet } from 'use-wallet';\nimport styled from 'styled-components';\nimport useModal from '../../hooks/useModal';\nimport WalletProviderModal from '../WalletProviderModal';\nimport AccountModal from './AccountModal';\n\ninterface AccountButtonProps {\n  text?: string;\n}\n\nconst CustomBtn = styled(Button)`\n    border-radius: 3px!important;\n    border-color: #1FE7ABFF !important;\n    height: 40px;\n    &:hover {\n      background-color: #0086ff !important;\n    }\n  `;\n\nconst AccountButton: React.FC<AccountButtonProps> = ({ text }) => {\n  const { account } = useWallet();\n  const accountEllipsis = account ? account.substring(0, 4) + \"...\" + account.substring(account.length - 4) : null;\n  const [onPresentAccountModal] = useModal(<AccountModal />);\n\n  const [isWalletProviderOpen, setWalletProviderOpen] = useState(false);\n\n  const handleWalletProviderOpen = () => {\n    setWalletProviderOpen(true);\n  };\n\n  const handleWalletProviderClose = () => {\n    setWalletProviderOpen(false);\n  };\n\n  const buttonText = text ? text : 'Connect Wallet';\n\n  return (\n    <div>\n      {!account ? (\n        <CustomBtn onClick={handleWalletProviderOpen} color=\"primary\" variant=\"contained\">\n          <p style={{color: '#212121'}}>{buttonText}</p>\n        </CustomBtn>\n      ) : (\n        <CustomBtn  color=\"primary\" variant=\"contained\" onClick={onPresentAccountModal}>\n          <p style={{color: '#212121', fontSize: '18px'}}><b>{accountEllipsis}</b></p>\n        </CustomBtn>\n      )}\n\n      <WalletProviderModal open={isWalletProviderOpen} handleClose={handleWalletProviderClose} />\n      {/* <AccountModal open={isAccountModalOpen} handleClose={handleAccountModalClose}/> */}\n    </div>\n  );\n};\n\nexport default AccountButton;\n","import React from 'react';\nimport styled from 'styled-components';\n\nconst CardContent: React.FC = ({ children }) => <StyledCardContent>{children}</StyledCardContent>;\n\nconst StyledCardContent = styled.div`\n  display: flex;\n  flex: 1;\n  flex-direction: column;\n  padding: ${(props) => props.theme.spacing[4]}px;\n`;\n\nexport default CardContent;\n","module.exports = __webpack_public_path__ + \"static/media/metamask-fox.c06f3a3e.svg\";"],"sourceRoot":""}